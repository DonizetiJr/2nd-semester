#include <stdlib.h>
#include <stdio.h>

// A utility function that returns maximum of two integers 
int max(int a, int b) {
  return (a > b) ? a : b;
}

// Returns the maximum value that can be put in knapsack of capacity w
int knapsack(int w, int wt[], int val[], int n) {
  if (n == 0 || w == 0) return 0;

  // if weight of the nth item is more than Knapsack capacity w, then
  // this item cannot be included in the optimal solution
  if (wt[n-1] > w) return knapsack(w, wt, val, n-1);

  /* Return the maximum of two cases:
  * (1) nth item included
  * (2) not included */
  else return max(val[n-1] + knapsack(w-wt[n-1], wt, val, n-1), knapsack(w, wt, val, n-1));

}

int main(int argc, char *argv[]) {
  int qnt_mochilas, qnt_itens, capacidade,, 
  int val[] = {60, 100, 120};
  int wt[] = {10, 20, 30};
  int w = 50;
  int n = sizeof(val)/sizeof(val[0]);

  scanf("%d", &qnt_mochilas);
  
  printf("%d", knapsack(w, wt, val, n));
  
  return 0;
}
